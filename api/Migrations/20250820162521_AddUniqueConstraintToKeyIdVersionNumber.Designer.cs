// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RevloDB.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(RevloDbContext))]
    [Migration("20250820162521_AddUniqueConstraintToKeyIdVersionNumber")]
    partial class AddUniqueConstraintToKeyIdVersionNumber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RevloDB.Entities.Key", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int?>("CurrentVersionId")
                        .HasColumnType("integer")
                        .HasColumnName("current_version_id");

                    b.Property<string>("KeyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("key_name");

                    b.HasKey("Id");

                    b.HasIndex("CurrentVersionId");

                    b.HasIndex("KeyName")
                        .IsUnique()
                        .HasDatabaseName("ix_keys_key_name");

                    b.ToTable("keys", (string)null);
                });

            modelBuilder.Entity("RevloDB.Entities.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KeyId")
                        .HasColumnType("integer")
                        .HasColumnName("key_id");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("integer")
                        .HasColumnName("version_number");

                    b.HasKey("Id");

                    b.HasIndex("KeyId", "VersionNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_versions_key_id_version_number");

                    b.ToTable("versions", (string)null);
                });

            modelBuilder.Entity("RevloDB.Entities.Key", b =>
                {
                    b.HasOne("RevloDB.Entities.Version", "CurrentVersion")
                        .WithMany()
                        .HasForeignKey("CurrentVersionId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_keys_versions_current_version_id");

                    b.Navigation("CurrentVersion");
                });

            modelBuilder.Entity("RevloDB.Entities.Version", b =>
                {
                    b.HasOne("RevloDB.Entities.Key", "Key")
                        .WithMany("Versions")
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_versions_keys_key_id");

                    b.Navigation("Key");
                });

            modelBuilder.Entity("RevloDB.Entities.Key", b =>
                {
                    b.Navigation("Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
